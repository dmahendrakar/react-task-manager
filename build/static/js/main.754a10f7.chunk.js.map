{"version":3,"sources":["hoc/Aux/Aux.js","store/actions/actionTypes.js","store/actions/tasks.js","shared/utility.js","components/TaskEditor.js","components/TaskList.js","store/selectors/tasks.js","containers/TaskList.js","components/TaskManager.js","shared/axios.js","store/sagas/tasks.js","store/sagas/index.js","store/reducers/tasks.js","store/reducers/index.js","App.js","index.js"],"names":["aux","props","children","FETCH_TASKS","CREATE_TASK","DELETE_TASKS","UPDATE_TASK","BULK_UPDATE_TASKS","fetchTasksStart","type","fetchTasksSucceeded","fetchTasksFailed","error","updateTaskStart","updateTaskSucceeded","updateTaskFailed","bulkUpdateTasksStart","bulkUpdateTasksSucceeded","bulkUpdateTasksFailed","createTaskStart","createTaskSucceeded","createTaskFailed","deleteTasksStart","deleteTasksSucceeded","deleteTasksFailed","initTasks","tasks","setTask","task","setTasks","removeTasks","updateObject","oldObject","updatedProperties","Object","objectSpread","getHumanizedTime","unixTimestamp","moment","tz","guess","format","TaskEditor","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","_ref","name","value","setState","defineProperty","componentDidUpdate","prevProps","prevState","JSON","stringify","state","nextProps","nextState","_this2","_this$props","open","onClose","onSubmit","_this$state","title","description","creationTime","lastModifiedTime","status","react_default","a","createElement","Aux","Modal","closeIcon","Header","icon","content","Content","Form","preventDefault","data","assign","Date","now","Field","control","Input","label","placeholder","onChange","TextArea","Checkbox","style","display","checked","className","toggle","Label","Icon","Button","color","size","Component","TaskList","openEditor","openCreator","clickedTask","checkedTasks","checkedTasksIndex","onCreate","onUpdate","onBulkUpdate","onDelete","taskRows","map","index","ClickableCell","Table","Cell","onClick","Row","key","id","collapsing","slider","includes","_checkedTasksIndex","splice","indexOf","push","concat","toConsumableArray","floated","labelPosition","compact","celled","definition","HeaderCell","Body","Footer","fullWidth","colSpan","src_components_TaskEditor","newTask","getTaskList","createSelector","_sortBy","values","connect","dispatch","actionTypes","actions","TaskManager","Menu","containers_TaskList","instance","axios","create","defaults","baseURL","initTasksSaga","createTaskSaga","updateTaskSaga","bulkUpdateTasksSaga","deleteTasksSaga","action","response","regenerator_default","wrap","_context","prev","next","put","get","sent","t0","console","stop","_marked","_response","_context2","post","_marked2","_task","_context3","_marked3","_context4","_marked4","_tasks","_context5","delete","_pluck","_marked5","watchTasks","rootSaga","takeEvery","sagas_marked","all","sagas_marked2","initialState","isSet","makeTaskIdMap","tasksMap","forEach","reducer","arguments","length","undefined","updatedTasks","_difference","rootReducer","combineReducers","tasksReducer","App","_Component","initStore","store","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","inherits","createClass","es","src_components_TaskManager","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.754a10f7.chunk.js","sourcesContent":["const aux = (props) => props.children;\n\nexport default aux;","export const FETCH_TASKS = 'FETCH_TASKS';\nexport const FETCH_TASKS_START = 'FETCH_TASKS_START';\nexport const FETCH_TASKS_SUCCEEDED = 'FETCH_TASKS_SUCCEEDED';\nexport const FETCH_TASKS_FAILED = 'FETCH_TASKS_FAILED';\n\nexport const CREATE_TASK = 'CREATE_TASK';\nexport const CREATE_TASK_START = 'CREATE_TASK_START';\nexport const CREATE_TASK_SUCCEEDED = 'CREATE_TASK_SUCCEEDED';\nexport const CREATE_TASK_FAILED = 'CREATE_TASK_FAILED';\n\nexport const DELETE_TASKS = 'DELETE_TASKS';\nexport const DELETE_TASKS_START = 'DELETE_TASKS_START';\nexport const DELETE_TASKS_SUCCEEDED = 'DELETE_TASKS_SUCCEEDED';\nexport const DELETE_TASKS_FAILED = 'DELETE_TASKS_FAILED';\n\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const UPDATE_TASK_START = 'UPDATE_TASK_START';\nexport const UPDATE_TASK_SUCCEEDED = 'UPDATE_TASK_SUCCEEDED';\nexport const UPDATE_TASK_FAILED = 'UPDATE_TASK_FAILED';\n\nexport const BULK_UPDATE_TASKS = 'BULK_UPDATE_TASKS';\nexport const BULK_UPDATE_TASKS_START = 'BULK_UPDATE_TASKS_START';\nexport const BULK_UPDATE_TASKS_SUCCEEDED = 'BULK_UPDATE_TASKS_SUCCEEDED';\nexport const BULK_UPDATE_TASKS_FAILED = 'BULK_UPDATE_TASKS_FAILED';\n\nexport const INIT_TASKS = 'INIT_TASKS';\nexport const SET_TASK = 'SET_TASK';\nexport const SET_TASKS = 'SET_TASKS';\nexport const REMOVE_TASKS = 'REMOVE_TASKS';","import * as actionTypes from '../actions/actionTypes';\n\nexport const fetchTasks = () => {\n    return {\n        type: actionTypes.FETCH_TASKS\n    };\n};\n\nexport const fetchTasksStart = () => {\n    return {\n        type: actionTypes.FETCH_TASKS_START\n    };\n};\n\nexport const fetchTasksSucceeded = () => {\n    return {\n        type: actionTypes.FETCH_TASKS_SUCCEEDED\n    };\n};\n\nexport const fetchTasksFailed = error => {\n    return {\n        type: actionTypes.FETCH_TASKS_FAILED,\n        error\n    };\n};\n\nexport const updateTask = task => {\n    return {\n        type: actionTypes.UPDATE_TASK,\n        task\n    };\n};\n\nexport const updateTaskStart = () => {\n    return {\n        type: actionTypes.UPDATE_TASK_START\n    };\n};\n\nexport const updateTaskSucceeded = () => {\n    return {\n        type: actionTypes.UPDATE_TASK_SUCCEEDED\n    };\n};\n\nexport const updateTaskFailed = error => {\n    return {\n        type: actionTypes.UPDATE_TASK_FAILED,\n        error\n    };\n};\n\nexport const bulkUpdateTasks = tasks => {\n    return {\n        type: actionTypes.BULK_UPDATE_TASKS,\n        tasks\n    };\n};\n\nexport const bulkUpdateTasksStart = () => {\n    return {\n        type: actionTypes.BULK_UPDATE_TASKS_START\n    };\n};\n\nexport const bulkUpdateTasksSucceeded = () => {\n    return {\n        type: actionTypes.BULK_UPDATE_TASKS_SUCCEEDED\n    };\n};\n\nexport const bulkUpdateTasksFailed = error => {\n    return {\n        type: actionTypes.BULK_UPDATE_TASKS_FAILED,\n        error\n    };\n};\n\nexport const createTask = task => {\n    return {\n        type: actionTypes.CREATE_TASK,\n        task\n    };\n};\n\nexport const createTaskStart = () => {\n    return {\n        type: actionTypes.CREATE_TASK_START\n    };\n};\n\nexport const createTaskSucceeded = () => {\n    return {\n        type: actionTypes.CREATE_TASK_SUCCEEDED\n    };\n};\n\nexport const createTaskFailed = error => {\n    return {\n        type: actionTypes.CREATE_TASK_FAILED,\n        error\n    };\n};\n\nexport const deleteTasks = tasks => {\n    return {\n        type: actionTypes.DELETE_TASKS,\n        tasks\n    };\n};\n\nexport const deleteTasksStart = () => {\n    return {\n        type: actionTypes.DELETE_TASKS_START\n    };\n};\n\nexport const deleteTasksSucceeded = () => {\n    return {\n        type: actionTypes.DELETE_TASKS_SUCCEEDED\n    };\n};\n\nexport const deleteTasksFailed = error => {\n    return {\n        type: actionTypes.DELETE_TASKS_FAILED,\n        error\n    };\n};\n\n// Add or replace task\nexport const initTasks = tasks => {\n    return {\n        type: actionTypes.INIT_TASKS,\n        tasks\n    };\n};\n\n// Add or replace task\nexport const setTask = task => {\n    return {\n        type: actionTypes.SET_TASK,\n        task\n    };\n};\n\n// Add or replace tasks\nexport const setTasks = tasks => {\n    return {\n        type: actionTypes.SET_TASKS,\n        tasks\n    };\n};\n\nexport const removeTasks = tasks => {\n    return {\n        type: actionTypes.REMOVE_TASKS,\n        tasks\n    };\n};","import moment from 'moment-timezone';\n\nexport const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};\n\nexport const updateArray = (oldArray, newEntries) => {\n    return [\n        ...oldArray,\n        ...newEntries\n    ];\n};\n\nexport const hasOwnProperty = (object, property) => {\n    return object && Object.prototype.hasOwnProperty.call(object, property);\n};\n\nexport const getHumanizedTime = (unixTimestamp) => {\n    return moment(unixTimestamp).tz(moment.tz.guess()).format('MMMM Do YYYY, h:mm:ss A');\n};","import React, { Component } from 'react';\nimport { Icon, Header, Modal, Form, Input, TextArea, Label } from 'semantic-ui-react';\n\nimport './TaskEditor.css';\nimport Aux from '../hoc/Aux/Aux';\nimport {updateObject, getHumanizedTime} from '../shared/utility';\n\nclass TaskEditor extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    handleChange = (e, { name, value }) => this.setState({ [name]: value })\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return JSON.stringify(this.props) !== JSON.stringify(nextProps) ||\n            JSON.stringify(this.state) !== JSON.stringify(nextState);\n    }\n\n    componentDidUpdate = (prevProps, prevState) => {\n        if(JSON.stringify(this.state) === JSON.stringify(prevState) && this.props.task) {\n            this.setState(this.props.task || {});\n        }\n    }\n\n    render() {\n        const {\n            open,\n            onClose,\n            onSubmit,\n            task\n        } = this.props;\n\n        const {\n            title,\n            description,\n            creationTime,\n            lastModifiedTime,\n            status\n        } = this.state;\n\n        return (\n            <Aux>\n                <Modal \n                    open={open} \n                    closeIcon \n                    onClose={()=>{this.setState({}, ()=>{\n                        onClose()\n                    })}}\n                    >\n                    <Header icon='edit' content='Task Editor' />\n                    <Modal.Content>\n                    <Form onSubmit={(e) => {\n                            e.preventDefault();\n                            const data = Object.assign({}, this.state);\n                            this.setState({}, ()=>{\n                                onSubmit(updateObject(data, {\n                                    creationTime: data.creationTime || Date.now(),\n                                    lastModifiedTime: Date.now(),\n                                    status: data.status || 'PENDING'\n                                }));\n                            });                        \n                        }}>\n                        <Form.Field \n                            name='title'\n                            value={title}\n                            control={Input}\n                            label='Title' \n                            placeholder='Task title' \n                            onChange={this.handleChange}/>\n                        <Form.Field \n                            name='description'\n                            value={description}\n                            control={TextArea} \n                            label='Description' \n                            placeholder='Task description...' \n                            onChange={this.handleChange}/>\n                        <Form.Checkbox \n                            style={{display: task ? 'block' : 'none'}}\n                            name='status'\n                            checked={status === 'COMPLETED'}\n                            className='EditorStatusCheckbox' \n                            label='The task completed' \n                            toggle\n                            onChange={(e)=>this.handleChange(e, {\n                                name: 'status',\n                                value: status === 'PENDING' ? 'COMPLETED' : 'PENDING'\n                            })}    \n                            />\n                        <Label style={{display: task ? 'inline' : 'none'}}>\n                            <Icon name='calendar' /> Created on: {getHumanizedTime(creationTime)}\n                        </Label>  \n                        <Label style={{display: task ? 'inline' : 'none'}}>\n                            <Icon name='calendar' /> Modified on: {getHumanizedTime(lastModifiedTime)}\n                        </Label>        \n                        <Form.Button className='EditorSubmitButton' color='green' size='small'>\n                            <Icon name='save outline'/> Save\n                        </Form.Button>\n                    </Form>\n                    </Modal.Content>\n                </Modal>\n            </Aux>\n        );\n    }\n}\n\nexport default TaskEditor;","import React, { Component } from 'react';\nimport { Button, Checkbox, Icon, Table, Input } from 'semantic-ui-react';\n\nimport './TaskList.css';\nimport TaskEditor from './TaskEditor';\nimport {getHumanizedTime, updateObject} from '../shared/utility';\n\nclass TaskList extends Component {\n    state = {\n        openEditor: false,\n        openCreator: false,\n        clickedTask: {},\n        checkedTasks: [],\n        checkedTasksIndex: []\n    }\n\n    render() {\n        const {\n            tasks,\n            onCreate,\n            onUpdate,\n            onBulkUpdate,\n            onDelete\n        } = this.props;\n\n        const {\n            openEditor,\n            openCreator,\n            clickedTask,\n            checkedTasks,\n            checkedTasksIndex\n        } = this.state;\n\n        const taskRows = tasks.map((task, index) => {\n            const ClickableCell = (props) => {\n                return (\n                    <Table.Cell onClick={()=>{\n                        this.setState({\n                        openEditor: true,\n                        clickedTask: task\n                    })}}>{props.value}</Table.Cell>\n                );\n            }\n\n            return (\n                <Table.Row \n                    className='TableRow' \n                    key={task.id}\n                    >\n                    <Table.Cell collapsing>\n                        <Checkbox slider checked={checkedTasksIndex.includes(index)} onClick={()=>{\n                            const _checkedTasksIndex = checkedTasksIndex;\n                            if (!_checkedTasksIndex.includes(index)) {\n                                _checkedTasksIndex.push(index);\n                            } else {\n                                _checkedTasksIndex.splice(_checkedTasksIndex.indexOf(index), 1);\n                            }\n\n                            this.setState(updateObject(this.state, {\n                                checkedTasks: [...checkedTasks, task],\n                                checkedTasksIndex: _checkedTasksIndex\n                            }))\n                        }} />\n                    </Table.Cell>                \n                    <ClickableCell value={task.title}/>\n                    <ClickableCell value={getHumanizedTime(task.creationTime)}/>\n                    <ClickableCell value={task.status || 'PENDING'}/>\n                </Table.Row>\n            );\n        });\n\n        return (\n            <div className='TaskListView'>\n                <div className='TaskListOperations'>\n                    <Input floated='left' icon='search' placeholder='Search by title...' />\n                    <Button floated='right' icon labelPosition='left' color='teal' size='small'\n                        onClick={()=>{\n                            this.setState({openCreator: true});\n                        }}\n                    >\n                        <Icon name='plus' /> Add\n                    </Button>\n                </div>\n                <Table compact celled definition className='TaskListTable'>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell />\n                            <Table.HeaderCell>Title</Table.HeaderCell>\n                            <Table.HeaderCell>Created Date</Table.HeaderCell>\n                            <Table.HeaderCell>Status</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n\n                    <Table.Body>\n                        {taskRows}\n                    </Table.Body>\n\n                    <Table.Footer fullWidth>\n                        <Table.Row>\n                            <Table.HeaderCell />\n                            <Table.HeaderCell colSpan='4'>\n                                <Button floated='right' size='small' color='teal' onClick={()=>{\n                                    this.setState({checkedTasks: [], checkedTasksIndex: []}, ()=>{\n                                        onDelete(checkedTasks);\n                                    });\n                                }}>\n                                    <Icon name='minus' /> Remove\n                                </Button>\n                                <Button floated='right' size='small' color='teal' onClick={()=>{\n                                    this.setState({checkedTasks: [], checkedTasksIndex: []}, ()=>{\n                                        onBulkUpdate(checkedTasks.map(task => {\n                                            task.status = 'COMPLETED';\n                                            return task\n                                        }))\n                                    });\n                                }}>\n                                    <Icon name='check' /> Completed\n                                </Button>\n                            </Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Footer>\n                </Table>\n                <TaskEditor \n                    open={openCreator} \n                    onClose={()=>{this.setState({openCreator:false})}}\n                    onSubmit={(newTask)=>{this.setState({openCreator:false}); onCreate(newTask);}}\n                />\n                <TaskEditor \n                    open={openEditor} \n                    task={clickedTask}\n                    onClose={()=>{this.setState({openEditor:false})}}\n                    onSubmit={(newTask)=>{this.setState({openEditor:false}); onUpdate(newTask);}}\n                />\n            </div>\n        );\n    }\n}\n\nexport default TaskList;","import {createSelector} from 'reselect';\nimport {sortBy as _sortBy} from 'underscore';\n\nexport const getTasks = state => state.tasks.tasks;\n\nexport const getTaskList = createSelector(\n    getTasks,\n    tasks => _sortBy(Object.values(tasks), 'creationTime')\n);","import {connect} from 'react-redux';\n\nimport * as actions from '../store/actions';\nimport TaskList from '../components/TaskList';\nimport {getTaskList} from '../store/selectors';\n\nconst mapStateToProps = state => {\n    return {\n        tasks: getTaskList(state)\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onCreate: newTask => dispatch(actions.createTask(newTask)),\n        onUpdate: task => dispatch(actions.updateTask(task)),\n        onBulkUpdate: tasks => dispatch(actions.bulkUpdateTasks(tasks)),\n        onDelete: tasks => dispatch(actions.deleteTasks(tasks))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);","import React, {Component} from 'react';\nimport {Menu, Icon} from 'semantic-ui-react';\n\nimport './TaskManager.css';\nimport Aux from '../hoc/Aux/Aux';\nimport TaskList from '../containers/TaskList';\n\nclass TaskManager extends Component {\n    render() {\n        return (\n            <Aux>\n                <Menu className='AppMenu'>\n                    <div className='AppName'>\n                        <Icon name='tasks' />\n                        <span>Task Manager</span>\n                    </div>\n                </Menu>\n                <TaskList/>\n            </Aux>\n        );\n    }\n}\n\nexport default TaskManager;","import axios from 'axios';\n\nconst instance = axios.create();\ninstance.defaults.baseURL = 'https://sy72l3aebf.execute-api.us-west-2.amazonaws.com/v1';\n\nexport default instance;","import {put} from 'redux-saga/effects';\nimport {\n    pluck as _pluck\n} from 'underscore';\n\nimport axios from '../../shared/axios';\nimport * as actions from '../actions';\nimport {updateObject} from '../../shared/utility';\n\nexport function* initTasksSaga(action) {\n    try {\n        yield put(actions.fetchTasksStart());\n\n        const response = yield axios.get('/');\n        yield put(actions.initTasks(response.data));\n\n        yield put(actions.fetchTasksSucceeded());\n    } catch (error) {\n        console.error('[TaskManagerWidget] error', error);\n        yield put(actions.fetchTasksFailed(error));\n    }\n}\n\nexport function* createTaskSaga(action) {\n    try {\n        yield put(actions.createTaskStart());\n\n        const {task} = action;        \n        const response = yield axios.post('/', task);\n        const {id} = response.data;\n        yield put(actions.setTask(updateObject(task, {id: id})));\n\n        yield put(actions.createTaskSucceeded());\n    } catch (error) {\n        console.error('[TaskManagerWidget] error', error);\n        yield put(actions.createTaskFailed(error));\n    }\n}\n\nexport function* updateTaskSaga(action) {\n    try {\n        yield put(actions.updateTaskStart());\n\n        const {task} = action;        \n        yield axios.put('/', task);\n        yield put(actions.setTask(task));\n\n        yield put(actions.updateTaskSucceeded());\n    } catch (error) {\n        console.error('[TaskManagerWidget] error', error);\n        yield put(actions.updateTaskFailed(error));\n    }\n}\n\nexport function* bulkUpdateTasksSaga(action) {\n    try {\n        yield put(actions.bulkUpdateTasksStart());\n\n        const {tasks} = action;        \n        yield axios.put('/bulk', tasks);\n        yield put(actions.setTasks(tasks));\n\n        yield put(actions.bulkUpdateTasksSucceeded());\n    } catch (error) {\n        console.error('[TaskManagerWidget] error', error);\n        yield put(actions.bulkUpdateTasksFailed(error));\n    }\n}\n\nexport function* deleteTasksSaga(action) {\n    try {\n        yield put(actions.deleteTasksStart());\n\n        const {tasks} = action;        \n        yield axios.delete('/bulk', {data: _pluck(tasks, 'id').map(id => {\n            return {id};\n        })});\n        yield put(actions.removeTasks(tasks));\n\n        yield put(actions.deleteTasksSucceeded());\n    } catch (error) {\n        console.error('[TaskManagerWidget] error', error);\n        yield put(actions.deleteTasksFailed(error));\n    }\n}","import {all, takeEvery} from 'redux-saga/effects';\n\nimport * as actionTypes from '../actions/actionTypes';\nimport {\n    initTasksSaga,\n    createTaskSaga,\n    updateTaskSaga,\n    bulkUpdateTasksSaga,\n    deleteTasksSaga\n} from './tasks';\n\nexport function* watchTasks() {\n    yield takeEvery(actionTypes.FETCH_TASKS, initTasksSaga);\n    yield takeEvery(actionTypes.CREATE_TASK, createTaskSaga);\n    yield takeEvery(actionTypes.UPDATE_TASK, updateTaskSaga);\n    yield takeEvery(actionTypes.BULK_UPDATE_TASKS, bulkUpdateTasksSaga);\n    yield takeEvery(actionTypes.DELETE_TASKS, deleteTasksSaga);\n}\n\nexport default function* rootSaga() {\n    yield all(\n        [\n            watchTasks()\n        ]\n    );\n}","import {\n    difference as _difference\n} from 'underscore';\n\nimport * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../../shared/utility';\n\nconst initialState = {\n    tasks: {},\n    isSet: false\n};\n\nexport const makeTaskIdMap = (tasks) => {\n    const tasksMap = {};\n    tasks.forEach(task => {\n        tasksMap[task.id] = task;\n    });\n\n    return tasksMap;\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n    case actionTypes.INIT_TASKS: {\n        return updateObject(state, {\n            tasks: makeTaskIdMap(action.tasks),\n            isSet: true\n        });\n    }\n    case actionTypes.SET_TASK: {\n        const {task} = action;\n        return updateObject(state, {\n            tasks: updateObject(state.tasks, {\n                [task.id]: task\n            })\n        });\n    }\n    case actionTypes.SET_TASKS: {\n        const {tasks} = action;\n\n        const updatedTasks = Object.assign({}, state.tasks);\n        tasks.forEach(task => updatedTasks[task.id] = task);\n        \n        return updateObject(state, {\n            tasks: updateObject(state.tasks, updatedTasks)\n        });\n    }\n    case actionTypes.REMOVE_TASKS: {\n        const {tasks} = action;\n\n        return updateObject(state, {\n            tasks: _difference(state.tasks, tasks)\n        });\n    }\n    default:\n        return state;\n    }\n};\n\nexport default reducer;","import {combineReducers} from 'redux';\n\nimport tasksReducer from '../reducers/tasks';\n\nconst rootReducer = combineReducers({\n    tasks: tasksReducer\n});\n\nexport default rootReducer;","import React, {Component} from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport {Provider} from 'react-redux';\n\nimport './App.css';\nimport TaskManager from './components/TaskManager';\nimport * as actions from './store/actions';\nimport rootSaga from './store/sagas';\nimport rootReducer from './store/reducers';\n\nexport class App extends Component {\n  constructor(props) {\n      super(props);\n\n      this.initStore();\n  }\n\n  componentWillMount() {\n    this.store.dispatch(actions.fetchTasks());\n  }\n\n  /**\n   * Initialises the redux store if not present\n   */\n  initStore = () => {\n      const {store} = this.props;\n\n      this.store = store;\n      if (!store) {\n          const sagaMiddleware = createSagaMiddleware();\n          const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n          this.store = createStore(rootReducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\n          sagaMiddleware.run(rootSaga);\n      }\n  };\n\n  render() {\n      return (\n          <Provider store={this.store}>\n              <TaskManager />\n          </Provider>\n      );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}